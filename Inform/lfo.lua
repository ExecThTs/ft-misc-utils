local VIB_TABLE = {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02},
  {0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03},
  {0x00, 0x00, 0x00, 0x01, 0x01, 0x02, 0x02, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04},
  {0x00, 0x00, 0x01, 0x02, 0x02, 0x03, 0x03, 0x04, 0x04, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06},
  {0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x07, 0x08, 0x08, 0x09, 0x09, 0x09, 0x09},
  {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x09, 0x0A, 0x0B, 0x0B, 0x0B, 0x0B},
  {0x00, 0x01, 0x02, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0C, 0x0D, 0x0D, 0x0D},
  {0x00, 0x01, 0x03, 0x04, 0x06, 0x08, 0x09, 0x0A, 0x0C, 0x0D, 0x0E, 0x0E, 0x0F, 0x10, 0x10, 0x10},
  {0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D, 0x0F, 0x11, 0x12, 0x13, 0x14, 0x15, 0x15, 0x15},
  {0x00, 0x02, 0x05, 0x08, 0x0B, 0x0E, 0x10, 0x13, 0x15, 0x17, 0x18, 0x1A, 0x1B, 0x1C, 0x1D, 0x1D},
  {0x00, 0x04, 0x08, 0x0C, 0x10, 0x14, 0x18, 0x1B, 0x1F, 0x22, 0x24, 0x26, 0x28, 0x2A, 0x2B, 0x2B},
  {0x00, 0x06, 0x0C, 0x12, 0x18, 0x1E, 0x23, 0x28, 0x2D, 0x31, 0x35, 0x38, 0x3B, 0x3D, 0x3E, 0x3F},
  {0x00, 0x09, 0x12, 0x1B, 0x24, 0x2D, 0x35, 0x3C, 0x43, 0x4A, 0x4F, 0x54, 0x58, 0x5B, 0x5E, 0x5F},
  {0x00, 0x0C, 0x18, 0x25, 0x30, 0x3C, 0x47, 0x51, 0x5A, 0x62, 0x6A, 0x70, 0x76, 0x7A, 0x7D, 0x7F},
}

local getVibrato = function (depth, phase)
  local invert = phase % 0x40 >= 0x20
  phase = phase % 0x20
  if phase >= 0x10 then phase = 0x1F - phase end
  return VIB_TABLE[depth + 1][phase + 1] * (invert and -1 or 1)
end

local getTremolo = function (depth, phase)
  phase = math.floor(phase % 0x40 / 2)
  if phase >= 0x10 then phase = 0x1F - phase end
  return -math.floor(VIB_TABLE[depth + 1][phase + 1] * (invert and -1 or 1) / 2)
end

local gcd = function (x, y)
  while y > 0 do x, y = y, x % y end
  return x
end

local relative4xy = function (x, y, p)
  p = p or 0
  local t = {}
  for i = 1, 64 / gcd(x, 64) do
    t[i] = getVibrato(y, x * i + p) - getVibrato(y, x * (i - 1) + p)
  end
  return t
end

local absolute4xy = function (x, y, p)
  p = p or 0
  local t = {}
  for i = 1, 64 / gcd(x, 64) do
    t[i] = getVibrato(y, x * i + p)
  end
  return t
end

local absolute7xy = function (x, y, p)
  p = p or 0
  local t = {}
  for i = 1, 64 / gcd(x, 64) do
    t[i] = getTremolo(y, x * i + p)
  end
  return t
end

local proc = {
  {absolute4xy, "absolute 4"},
  {relative4xy, "relative 4"},
  {absolute7xy, "absolute 7"},
}

io.output(arg[1])

for _, item in ipairs(proc) do
  for y = 1, 15 do for x = 1, 15 do
    local seq = item[1](x, y, 0)
    io.write(("%s%X%X:"):format(item[2], x, y))
    for i, v in ipairs(seq) do
      if i % 16 == 1 then io.write "\n" end
      io.write(("%4d"):format(v))
    end
    io.write "\n\n"
  end; io.write "\n" end
end
